/* eslint-disable no-undef */
import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "../../style/test.css";
import { IoIosArrowDroprightCircle } from "react-icons/io";
import { IoIosArrowDropleftCircle } from "react-icons/io";
import { useSocket } from "../../context/SocketContext";

export default function Test() {
    const navigate = useNavigate();
    const [selectedOptions, setSelectedOptions] = useState(Array(6).fill(null));
    const [error, setError] = useState("");
    const [currentQuestion, setCurrentQuestion] = useState(0);
    const { uploadStatus, setUploadStatus } = useSocket();

    const questions = [
        { question: "ÎãπÏã†ÏùÄ ÎØ∏Ïà†Í¥ÄÏóê Î∞©Î¨∏ÌñàÏäµÎãàÎã§. ÎàÑÍµ¨ÏôÄ Ìï®Íªò ÏôîÎÇòÏöî?üë•", optionA: "ÏπúÍµ¨ÎÇò Í∞ÄÏ°±Ïù¥Îûë Ìï®Íªò Í¥ÄÎûåÌïòÎü¨ ÏôîÏñ¥Ïöî.", optionB: "ÌòºÏûêÏÑú Ï°∞Ïö©Ìûà ÏûëÌíàÏùÑ Í∞êÏÉÅÌïòÎü¨ ÏôîÏñ¥Ïöî." },
        { question: "ÎØ∏Ïà†Í¥ÄÏóê ÎèÑÏ∞©ÌñàÏùÑ Îïå, Í∞ÄÏû• Î®ºÏ†Ä ÌïòÍ≥† Ïã∂ÏùÄ Í≤ÉÏùÄ Î¨¥ÏóáÏù∏Í∞ÄÏöî?üèõÔ∏è", optionA: "ÏïàÎÇ¥ Ï±ÖÏûêÎ•º ÏÇ¥Ìé¥Î≥¥Î©∞ Ï†ÑÏãúÍ¥ÄÏùò ÌùêÎ¶ÑÏùÑ Í≥ÑÌöçÌï†ÎûòÏöî.", optionB: "ÏûêÏú†Î°≠Í≤å ÎèåÏïÑÎã§ÎãàÎ©∞ ÎààÍ∏∏ Í∞ÄÎäî ÏûëÌíàÏùÑ Ï¶âÌù•Ï†ÅÏúºÎ°ú Í∞êÏÉÅÌï†ÎûòÏöî." },
        { question: "Ïñ¥Îñ§ Ï¢ÖÎ•òÏùò ÏûëÌíàÏù¥ ÎãπÏã†Ïùò ÎààÍ∏∏ÏùÑ ÎÅåÏóàÎÇòÏöî?üñºÔ∏èüëÄ", optionA: "ÏÉÅÏÉÅÎ†•ÏùÑ ÏûêÍ∑πÌïòÎäî Ï∂îÏÉÅÏ†ÅÏù∏ ÏûëÌíàÏù¥ Ï¢ãÏïÑÏöî.", optionB: "ÌòÑÏã§ÏùÑ Í∑∏ÎåÄÎ°ú ÌëúÌòÑÌïú Íµ¨Ï≤¥Ï†ÅÏù∏ ÏûëÌíàÏù¥ Ï¢ãÏïÑÏöî." },
        { question: "Ï†ÄÍ∏∞ ÎèÑÏä®Ìä∏üíÅ‚Äç‚ôÄÔ∏èÍ∞Ä ÏûëÌíàÏùÑ Ï∞®Î°ÄÏ∞®Î°Ä ÏÑ§Î™ÖÌïòÍ≥† ÏûàÎÑ§Ïöî!", optionA: "ÎèÑÏä®Ìä∏Ïùò ÏûêÏÑ∏Ìïú ÏÑ§Î™ÖÏùÑ Îì§Ïñ¥Î≥ºÎûòÏöî. ÏûëÌíàÏùÑ ÍπäÏù¥ ÏûàÍ≤å Ïù¥Ìï¥ÌïòÍ≥† Ïã∂Ïñ¥Ïöî.", optionB: "ÎÇòÎßåÏùò Î∞©ÏãùÏúºÎ°ú ÏûëÌíàÏùÑ Í∞êÏÉÅÌïòÎ©∞, Ïä§Ïä§Î°ú ÎäêÍª¥Î≥¥Í≥† Ïã∂Ïñ¥Ïöî." },
        { question: "ÎØ∏Ïà†Í¥ÄÏóêÏÑú ÏÉùÍ∞ÅÏßÄ Î™ªÌïú Í∞êÎèôÏùÑ Î∞õÏïòÏñ¥Ïöî.ü•∫ ÎãπÏã†Ïùò Î∞òÏùëÏùÄ?", optionA: "Ïôú Í∑∏Îü∞ Í∞êÏ†ïÏùÑ ÎäêÍºàÎäîÏßÄ Ïù¥Ïú†Î•º ÎÖºÎ¶¨Ï†ÅÏúºÎ°ú Î∂ÑÏÑùÌï¥Î¥êÏöî.", optionB: "Í∑∏ Í∞êÏ†ïÏùÑ ÎßàÏùåÏÜçÏóê Îã¥ÏïÑ ÎëêÍ≥† Ïó¨Ïö¥ÏùÑ ÏùåÎØ∏Ìï¥Ïöî." },
        { question: "Í∏∞ÎÖêÌíàÏÉµÏóê ÏôîÏñ¥Ïöî! Î≥ºÍ±∞Î¶¨Í∞Ä ÎßéÏïÑ Î≥¥Ïó¨Ïöî.üòäüéµ", optionA: "Í∞ÄÍ≤©Í≥º ÌíàÏßàÏùÑ ÎπÑÍµêÌïòÍ≥† Ïã†Ï§ëÌïòÍ≤å Í≤∞Ï†ïÌï¥Ïöî.", optionB: "ÎßàÏùåÏóê ÎìúÎäî Í≤ÉÏù¥ ÏûàÏúºÎ©¥ Î∞îÎ°ú Íµ¨Îß§Ìï¥Ïöî." },
        { question: "Ï†ÑÏãúÎ•º Î≥¥Í≥† ÎÇòÏò§Îäî Í∏∏Ïù¥ÏóêÏöî. Ïù¥ Í≤ΩÌóòÏùÑ Ïñ¥ÎñªÍ≤å Í∞ÑÏßÅÌïòÍ≥† Ïã∂ÎÇòÏöî?üìù", optionA: "SNSÏóê ÌõÑÍ∏∞Î•º Ïò¨Î†§ Îã§Î•∏ ÏÇ¨ÎûåÎì§Í≥º Í≥µÏú†Ìï†ÎûòÏöî.", optionB: "Ï°∞Ïö©Ìûà ÌòºÏûêÎßåÏùò Ï∂îÏñµÏúºÎ°ú Í∞ÑÏßÅÌïòÍ≥† Ïã∂Ïñ¥Ïöî." },
        { question: "ÏπúÍµ¨Í∞Ä Ï†ÑÏãúÍ∞Ä Ïñ¥Îï†ÎÉêÍ≥† Î¨ºÏñ¥Î≥¥ÎÑ§Ïöî. ÎãπÏã†ÏùÄ Ïñ¥ÎñªÍ≤å ÎåÄÎãµÌï†ÍπåÏöî?", optionA: "ÏûëÌíàÏùò ÎÇ¥Ïö©Ïù¥ÎÇò ÏûëÍ∞ÄÏùò Î∞∞Í≤Ω Îì± Ìù•ÎØ∏Î°úÏö¥ Ï†ïÎ≥¥Î•º Ï§ëÏã¨ÏúºÎ°ú ÏÑ§Î™ÖÌï¥Ïöî.", optionB: "Ï†ÑÏãúÎ•º ÌÜµÌï¥ ÎäêÍºàÎçò Í∞êÏ†ïÍ≥º Î∂ÑÏúÑÍ∏∞Î•º Ï§ëÏã¨ÏúºÎ°ú ÏÑ§Î™ÖÌï¥Ïöî." }
    ];

    useEffect(() => {
        if (uploadStatus) {
            if (currentQuestion !== 7) {
                setCurrentQuestion((prev) => prev + 1); // currentQuestionÏùÑ Ï¶ùÍ∞ÄÏãúÌÇ¥
                setUploadStatus(false); // uploadStatusÎ•º falseÎ°ú Ï¥àÍ∏∞Ìôî
            }
        }
    }, [uploadStatus, setUploadStatus]);


    const handleOptionChange = (index, value) => {
        const newSelectedOptions = [...selectedOptions];
        newSelectedOptions[index] = value;
        setSelectedOptions(newSelectedOptions);
        setError("");
    };

    const handlePrevious = () => {
        if (currentQuestion > 0) setCurrentQuestion(currentQuestion - 1);
    };

    const handleNext = () => {
        if (currentQuestion < questions.length - 1) setCurrentQuestion(currentQuestion + 1);
    };

    const progressWidth = `${((currentQuestion + 1) / questions.length) * 84}%`;

    return (
        <div className="test-container">
            <div className="test-bar">
                <div className="test-bar-lower" />
                <div
                    className="test-bar-upper"
                    style={{ width: progressWidth }}
                />
            </div>

            <div className="test-test">
                <div className="test-q"><span>Q</span></div>

                <div className="test-box">
                    <p>{currentQuestion + 1}/8</p>
                    <p>{uploadStatus ? "true" : "false"}</p>
                    <h1>{questions[currentQuestion].question}</h1>
                    <label className={`checkbox-label ${selectedOptions[currentQuestion] === "A" ? "checked" : ""}`}>
                        <input
                            type="radio"
                            name={`option${currentQuestion}`}
                            checked={selectedOptions[currentQuestion] === "A"}
                            onChange={() => handleOptionChange(currentQuestion, "A")}
                        />
                        {questions[currentQuestion].optionA}
                    </label>
                    <label className={`checkbox-label ${selectedOptions[currentQuestion] === "B" ? "checked" : ""}`}>
                        <input
                            type="radio"
                            name={`option${currentQuestion}`}
                            checked={selectedOptions[currentQuestion] === "B"}
                            onChange={() => handleOptionChange(currentQuestion, "B")}
                        />
                        {questions[currentQuestion].optionB}
                    </label>
                </div>
            </div>

            {error && <div className="test-error-message">{error}</div>}

            <div className="test-navigation">
                <button className="test-previous" onClick={handlePrevious} disabled={currentQuestion === 0}><IoIosArrowDropleftCircle /></button>
                {currentQuestion < questions.length - 1 ? (
                    <button className="test-next" onClick={handleNext} disabled={selectedOptions[currentQuestion] === null}><IoIosArrowDroprightCircle /></button>
                ) : (
                    <button className="test-nextpage" onClick={() => {navigate('/result')}} disabled={selectedOptions[currentQuestion] === null}>Í≤∞Í≥º ÌôïÏù∏ÌïòÍ∏∞</button>
                )}
            </div>

        </div>
    );
}
