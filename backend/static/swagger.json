{
  "swagger": "2.0",
  "info": {
    "title": "CO SHOW Exhibition Articket API",
    "description": "An API for users to upload images, take a personality test, and generate images transformed into the style of corresponding artists.",
    "version": "1.0.0"
  },
  "host": "192.168.88.155:5000",
  "basePath": "/",
  "schemes": ["http"],
  "tags": [
    {
      "name": "Image Upload",
      "description": "API for image upload"
    },
    {
      "name": "Image Transformation",
      "description": "API for image transformation and style adjustment"
    },
    {
      "name": "Personality Test Result",
      "description": "API for sending personality test results"
    },
    {
      "name": "Option Selection",
      "description": "API for test option selection"
    },
    {
      "name": "Option Transmission",
      "description": "API for transmitting user's selected options via socket"
    }
  ],
  "paths": {
    "/upload-image/": {
      "post": {
        "tags": ["Image Upload"],
        "summary": "Upload Image",
        "description": "Users can upload an image, and receive the path to the stored image on the server.",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "description": "User's name",
            "required": true,
            "default": "홍길동"
          },
          {
            "in": "query",
            "name": "gender",
            "type": "string",
            "description": "Gender ('male' or 'female')",
            "required": true,
            "default": "female"
          },
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "description": "Image file to upload",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Image uploaded successfully",
            "schema": {
              "type": "object",
              "properties": {
                "image_path": { "type": "string" }
              }
            }
          },
          "400": {
            "description": "Missing required information (name, gender, or image)."
          }
        }
      }
    },
    "/generate-images": {
      "post": {
        "tags": ["Image Transformation"],
        "summary": "Start Image Transformation",
        "description": "After uploading the image, call this API to generate images in the style of all artists.",
        "responses": {
          "200": {
            "description": "Image transformation started successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          },
          "400": {
            "description": "User name or gender is missing, or image has not been uploaded."
          },
          "500": {
            "description": "Image generation failed"
          }
        }
      }
    },
    "/select-option": {
      "get": {
        "tags": ["Option Selection"],
        "summary": "Option Selection Confirmation",
        "description": "Sends a confirmation request for option selection.",
        "responses": {
          "200": {
            "description": "Option selection confirmed"
          }
        }
      }
    },
    "/emit-options": {
      "post": {
        "tags": ["Option Transmission"],
        "summary": "Transmit Option List via Socket",
        "description": "Sends the user's selected option list to the server, which then emits it back to the frontend via socket.",
        "parameters": [
          {
            "in": "body",
            "name": "options",
            "description": "List of options selected by the user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "options": {
                  "type": "array",
                  "items": { "type": ["string", "null"] },
                  "example": ["A", "A", null, null, null, null, null, null]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Options transmitted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "options": {
                  "type": "array",
                  "items": { "type": ["string", "null"] }
                }
              }
            }
          },
          "400": {
            "description": "Option list is missing or has an invalid format."
          }
        }
      }
    },
    "/get-personality-result/{options}": {
      "post": {
        "tags": ["Personality Test Result"],
        "summary": "Personality Test Result",
        "description": "Returns the name of the artist corresponding to the user's personality based on their choices, along with the MBTI type.",
        "parameters": [
          {
            "in": "path",
            "name": "options",
            "description": "User's choice list (an 8-character string of 'A' and 'B', e.g., 'ABABABAB')",
            "required": true,
            "type": "string",
            "default": "ABABABAB"
          }
        ],
        "responses": {
          "200": {
            "description": "Test result successfully retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "artist": { "type": "string" },
                "mbti": { "type": "string" }
              }
            }
          },
          "400": {
            "description": "Selections are missing or have an invalid format."
          }
        }
      }
    },
    "/get-generated-images": {
      "post": {
        "tags": ["Personality Test Result"],
        "summary": "Generate Ticket PDF and Return Image Paths",
        "description": "Creates a ticket PDF for the corresponding artist and returns the paths to the images.",
        "responses": {
          "200": {
            "description": "Images and ticket generated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "user_name": { "type": "string" },
                "artist": { "type": "string" },
                "original_image": { "type": "string" },
                "generated_image": {
                  "type": "array",
                  "items": { "type": "string" },
                  "description": "Array of image paths transformed into the styles of each artist (user's type, compatible type, incompatible type)"
                },
                "matching_artists": {
                  "type": "object",
                  "properties": {
                    "good": {
                      "type": "string",
                      "description": "Compatible artist"
                    },
                    "bad": {
                      "type": "string",
                      "description": "Incompatible artist"
                    }
                  }
                },
                "qr_image": { "type": "string" }
              }
            }
          },
          "400": {
            "description": "Image or artist information is missing."
          },
          "500": {
            "description": "Failed to generate images"
          }
        }
      }
    }
  }
}
